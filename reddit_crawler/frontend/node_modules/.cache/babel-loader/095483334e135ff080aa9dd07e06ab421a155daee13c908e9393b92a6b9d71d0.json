{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Navigate,Routes}from'react-router-dom';import axios from'axios';import'./App.css';import'bootstrap/dist/css/bootstrap.min.css';import Login from'./components/Login';import StatusDisplay from'./components/StatusDisplay';import SubredditList from'./components/SubredditList';import AddSubreddit from'./components/AddSubreddit';import StartCollection from'./components/StartCollection';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{axios.get('/protected',{withCredentials:true}).then(response=>{setIsLoggedIn(true);}).catch(()=>{setIsLoggedIn(false);}).finally(()=>{setLoading(false);});},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App bg-dark text-white min-vh-100 d-flex flex-column\",style:{height:'100vh'},children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setIsLoggedIn:setIsLoggedIn})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-4 mt-4\",children:\"Reddit Data Collector\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-row\",style:{flex:1},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-pane d-flex flex-column p-3\",style:{flex:1},children:[/*#__PURE__*/_jsx(StatusDisplay,{}),/*#__PURE__*/_jsx(AddSubreddit,{}),/*#__PURE__*/_jsx(StartCollection,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right-pane p-3\",style:{flex:1},children:/*#__PURE__*/_jsx(SubredditList,{})})]})]}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Navigate","Routes","axios","Login","StatusDisplay","SubredditList","AddSubreddit","StartCollection","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","isLoggedIn","setIsLoggedIn","loading","setLoading","get","withCredentials","then","response","catch","finally","children","className","style","height","path","element","flex","to"],"sources":["/home/datacollection/deep_learning/deep_learning/reddit_crawler/frontend/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Navigate, Routes} from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './components/Login';\nimport StatusDisplay from './components/StatusDisplay';\nimport SubredditList from './components/SubredditList';\nimport AddSubreddit from './components/AddSubreddit';\nimport StartCollection from './components/StartCollection';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get('/protected', { withCredentials: true })\n            .then(response => {\n                setIsLoggedIn(true);\n            })\n            .catch(() => {\n                setIsLoggedIn(false);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Router>\n            <div className=\"App bg-dark text-white min-vh-100 d-flex flex-column\" style={{height: '100vh'}}>\n                <Routes>\n                    <Route path=\"/login\" element={<Login setIsLoggedIn={setIsLoggedIn}/>}/>\n                    <Route\n                        path=\"/\"\n                        element={\n                            isLoggedIn ? (\n                                <>\n                                    <h1 className=\"text-center mb-4 mt-4\">Reddit Data Collector</h1>\n                                    <div className=\"d-flex flex-row\" style={{flex: 1}}>\n                                        <div className=\"left-pane d-flex flex-column p-3\" style={{flex: 1}}>\n                                            <StatusDisplay/>\n                                            <AddSubreddit/>\n                                            <StartCollection/>\n                                        </div>\n                                        <div className=\"right-pane p-3\" style={{flex: 1}}>\n                                            <SubredditList/>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : (\n                                <Navigate to=\"/login\"/>\n                            )\n                        }\n                    />\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}